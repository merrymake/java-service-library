/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.2.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.json:json:20231013'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': rootProject.name,
                   'Implementation-Version': project.version)
        archivesBaseName = rootProject.name
    }
}

group = "eu.merrymake.service.java"
version = '1.0.0'
// version = '1.0.0-SNAPSHOT'

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = rootProject.name

            from components.java
            pom {
                name = 'Merrymake Service Library for Java'
                description = 'Various tools for interacting with Merrymake.'
                url = 'https://github.com/merrymake/java-service-library'

                scm {
                    connection = 'scm:git:git://github.com:merrymake/java-service-library.git'
                    developerConnection = 'scm:git:ssh://git@github.com:merrymake/java-service-library.git'
                    url = 'https://github.com/merrymake/java-service-library'
                }

                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://opensource.org/license/mit/'
                    }
                }

                developers {
                    developer {
                        id = 'figaw'
                        name = 'Nicolaj Gr√¶sholt'
                        email = 'ng@merrymake.eu'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = System.getenv("CENTRAL_USER")
                password = System.getenv("CENTRAL_TOKEN")
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
